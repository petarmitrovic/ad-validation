name: CI/CD

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run build with Gradle Wrapper
        run: ./gradlew clean ktlintCheck build

      - name: Cache the jar
        uses: actions/cache/save@v4
        with:
          path: build/libs
          key: boot-jar-${{ runner.os }}-${{ github.run_id }}

  build-docker-image:
    needs: build-gradle-project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore the jar from cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: build/libs
          key: boot-jar-${{ runner.os }}-${{ github.run_id }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          contents: read
          packages: write
